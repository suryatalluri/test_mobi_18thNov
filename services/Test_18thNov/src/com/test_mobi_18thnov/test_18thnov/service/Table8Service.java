/*Copyright (c) 2015-2016 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_mobi_18thnov.test_18thnov.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_mobi_18thnov.test_18thnov.*;

/**
 * Service object for domain model class Table8.
 * @see com.test_mobi_18thnov.test_18thnov.Table8
 */

public interface Table8Service {
   /**
	 * Creates a new table8.
	 * 
	 * @param created
	 *            The information of the created table8.
	 * @return The created table8.
	 */
	public Table8 create(Table8 created);

	/**
	 * Deletes a table8.
	 * 
	 * @param table8Id
	 *            The id of the deleted table8.
	 * @return The deleted table8.
	 * @throws EntityNotFoundException
	 *             if no table8 is found with the given id.
	 */
	public Table8 delete(Table8Id table8Id) throws EntityNotFoundException;

	/**
	 * Finds all table8s.
	 * 
	 * @return A list of table8s.
	 */
	public Page<Table8> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Table8> findAll(Pageable pageable);
	
	/**
	 * Finds table8 by id.
	 * 
	 * @param id
	 *            The id of the wanted table8.
	 * @return The found table8. If no table8 is found, this method returns
	 *         null.
	 */
	public Table8 findById(Table8Id id) throws EntityNotFoundException;
	/**
	 * Updates the information of a table8.
	 * 
	 * @param updated
	 *            The information of the updated table8.
	 * @return The updated table8.
	 * @throws EntityNotFoundException
	 *             if no table8 is found with given id.
	 */
	public Table8 update(Table8 updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the table8s in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the table8.
	 */

	public long countAll();


    public Page<Table8> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

